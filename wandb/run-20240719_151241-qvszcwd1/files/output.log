max batch tokens: 8100
peak mem per batch: 10.6787109375 GB
Batch creation time: 67.1029 ms
torch.Size([3, 100, 56]) torch.Size([3, 100, 4])
cost_bbox shape: torch.Size([300, 200])
cost_class shape: torch.Size([300, 200])
cost_giou shape: torch.Size([300, 200])
Traceback (most recent call last):
  File "/Users/minjunes/vlm/train.py", line 314, in <module>
    loss_dict = criterion(outs, targets)
  File "/Users/minjunes/miniconda3/envs/vlm/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/minjunes/miniconda3/envs/vlm/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/minjunes/vlm/detr/models/detr.py", line 237, in forward
    losses.update(self.get_loss(loss, outputs, targets, indices, num_boxes))
  File "/Users/minjunes/vlm/detr/models/detr.py", line 213, in get_loss
    return loss_map[loss](outputs, targets, indices, num_boxes, **kwargs)
  File "/Users/minjunes/vlm/detr/models/detr.py", line 121, in loss_labels
    loss_ce = F.cross_entropy(src_logits.transpose(1, 2), target_classes, self.empty_weight)
  File "/Users/minjunes/miniconda3/envs/vlm/lib/python3.10/site-packages/torch/nn/functional.py", line 3086, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index, label_smoothing)
IndexError: Target -1 is out of bounds.